name: Build and Release macOS Artifacts

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: macos-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'dashboard/package-lock.json'

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: aarch64-apple-darwin
          profile: minimal

      - name: Install dependencies
        working-directory: ./dashboard
        run: |
          npm ci
          npm install @tauri-apps/cli

      - name: Build both app and dmg
        working-directory: ./dashboard
        run: npx tauri build --bundles app,dmg

      - name: Verify DMG exists
        working-directory: ./dashboard
        run: |
          ls -la src-tauri/target/release/bundle/dmg/
          if [ ! -f "src-tauri/target/release/bundle/dmg/"*.dmg ]; then
            echo "::error::No DMG file found!"
            exit 1
          fi

      - name: Package .app for Homebrew
        working-directory: ./dashboard
        run: |
          cd src-tauri/target/release/bundle/macos
          tar -czf ProjexNexa.app.tar.gz ProjexNexa.app
          echo "APP_TAR_PATH=$(pwd)/ProjexNexa.app.tar.gz" >> $GITHUB_ENV

      - name: Get DMG path
        working-directory: ./dashboard
        id: dmg
        run: |
          DMG_FILE=$(ls src-tauri/target/release/bundle/dmg/*.dmg)
          echo "DMG_PATH=$(pwd)/$DMG_FILE" >> $GITHUB_OUTPUT
          echo "DMG_NAME=$(basename "$DMG_FILE")" >> $GITHUB_OUTPUT

      - name: Create Release with Assets
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: "ProjexNexa ${{ github.ref_name }}"
          body: |
            ### macOS Release
            - **Homebrew**: Use the `.app.tar.gz` for formula updates
            - **Manual Install**: Use the `.dmg` file
          files: |
            ${{ env.APP_TAR_PATH }}
            ${{ steps.dmg.outputs.DMG_PATH }}
          draft: false
          prerelease: false